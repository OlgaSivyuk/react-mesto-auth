{"ast":null,"code":"var _jsxFileName = \"/Users/olgasivyuk/dev/mesto-react/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { api } from \"../utils/Api.js\";\nimport Header from \"./Header\";\nimport Main from \"./Main\";\nimport PopupWithForm from \"./PopupWithForm\";\nimport EditProfilePopup from \"./EditProfilePopup\";\nimport EditAvatarPopup from \"./EditAvatarPopup\";\nimport ImagePopup from \"./ImagePopup\";\nimport Footer from \"./Footer\";\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n  const [selectedCard, setSelectedCard] = useState(null);\n  const [currentUser, setCurrentUser] = useState({}); // ПР11 создали переменную состояния currentUser\n\n  const [cards, setCards] = useState([]); // ПР11 перенесла карточки в корневой компонент\n\n  useEffect(() => {\n    api.getProfile().then(userData => {\n      //console.log(\"res\", userData)\n      setCurrentUser({ ...userData,\n        userName: userData.name,\n        userDescription: userData.about,\n        userAvatar: userData.avatar\n      });\n    }).catch(err => console.log(`Ошибка...: ${err}`));\n  }, []); // ПР11 создали эффект при монтировании, который будет вызывать api.getUserInfo и обновлять стейт-переменную из полученного значения\n\n  function handleUpdateUser(name, about) {\n    api.editProfile(name, about).then(res => {\n      setCurrentUser(res.name, res);\n      closeAllPopups();\n    }).catch(err => console.error(`Ошибка...: ${err}`));\n  }\n\n  ;\n\n  function handleUpdateAvatar(avatar) {\n    api.editProfileAvatar(avatar).then(userData => {\n      setCurrentUser(userData);\n      closeAllPopups();\n    }).catch(err => console.error(`Ошибка...: ${err}`));\n  }\n\n  ;\n  useEffect(() => {\n    api.getUsersCards().then(cardList => {\n      //console.log(\"res\", cardList)\n      const usersCard = cardList.map(card => {\n        return {\n          name: card.name,\n          link: card.link,\n          likes: card.likes,\n          cardId: card._id,\n          ownerId: card.owner._id\n        };\n      }); //console.log('usersCard', usersCard)\n\n      setCards(usersCard);\n    }).catch(err => console.log(`Ошибка...: ${err}`));\n  }, []);\n\n  function handleCardLike(card) {\n    // Снова проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some(user => user._id === currentUser._id); // Отправляем запрос в API и получаем обновлённые данные карточки\n    //   // Отправляем запрос в API и получаем обновлённые данные карточки\n    //   api.changeLikeCardStatus(card._id, !isLiked).then((newCard) => {\n    //     setCards((state) => state.map((c) => c._id === card._id ? newCard : c));\n    // });\n\n    if (isLiked) {\n      //если карточка с лайком ==> удали лайк\n      api.deleteLike(card.cardId).then(newCard => {\n        setCards(state => state.map(item => item.cardId === card.cardId ? newCard : item));\n      }).catch(err => console.log(`Ошибка...: ${err}`));\n    } else {\n      // если лайка нет ==> поставь лайк\n      api.addLike(card.cardId).then(newCard => {\n        //console.log(' поставить лайк', newCard)\n        setCards(stateCards => stateCards.map(item => item.cardId === card.cardId ? newCard : item));\n      }).catch(err => console.log(`Ошибка...: ${err}`));\n    }\n  }\n\n  function handleDeleteCard(card) {\n    api.deleteCard(card.cardId).then(res => {\n      console.log('удалить карточку', res);\n      setCards(stateCards => stateCards.filter(item => item.cardId !== card.cardId));\n    }).catch(err => console.log(`Ошибка...: ${err}`));\n  }\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n\n  function handleCardClick(card) {\n    // console.log(selectedCard)\n    setSelectedCard(card);\n  }\n\n  function closeAllPopups() {\n    setIsEditAvatarPopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setSelectedCard(null);\n  }\n\n  return /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n    value: currentUser,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Main, {\n        onEditAvatar: handleEditAvatarClick,\n        onEditProfile: handleEditProfileClick,\n        onAddPlace: handleAddPlaceClick,\n        onCardClick: handleCardClick,\n        onCardLike: handleCardLike,\n        onCardDelete: handleDeleteCard,\n        cards: cards\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n        isOpen: isEditProfilePopupOpen,\n        onClose: closeAllPopups,\n        onUpdateUser: handleUpdateUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(EditAvatarPopup, {\n        isOpen: isEditAvatarPopupOpen,\n        onClose: closeAllPopups,\n        onUpdateAvatar: handleUpdateAvatar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(PopupWithForm, {\n        name: \"place\",\n        isOpen: isAddPlacePopupOpen,\n        title: \"\\u041D\\u043E\\u0432\\u043E\\u0435 \\u043C\\u0435\\u0441\\u0442\\u043E\",\n        id: \"form-place\",\n        formName: \"edit-place-form\",\n        buttonText: \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C\",\n        onClose: closeAllPopups,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"place-name\",\n          name: \"place-name\",\n          className: \"popup__input popup__input_place-name\",\n          placeholder: \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435\",\n          minLength: \"2\",\n          maxLength: \"30\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          id: \"error-place-name\",\n          className: \"popup__error\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"url\",\n          id: \"place-link\",\n          name: \"place-link\",\n          className: \"popup__input popup__input_place_link\",\n          placeholder: \"\\u0421\\u0441\\u044B\\u043B\\u043A\\u0430 \\u043D\\u0430 \\u043A\\u0430\\u0440\\u0442\\u0438\\u043D\\u043A\\u0443\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          id: \"error-place-link\",\n          className: \"popup__error\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(PopupWithForm, {\n        name: \"delete-card\",\n        title: \"\\u0412\\u044B \\u0443\\u0432\\u0435\\u0440\\u0435\\u043D\\u044B?\",\n        id: \"form-delete-card\",\n        formName: \"delete-place-card\",\n        buttonText: \"\\u0414\\u0430\",\n        onClose: closeAllPopups\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(ImagePopup, {\n        card: selectedCard,\n        onClose: closeAllPopups\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"1VDaeXT6s4xA/OSlpyyW6HiywjI=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/olgasivyuk/dev/mesto-react/src/components/App.js"],"names":["React","useState","useEffect","api","Header","Main","PopupWithForm","EditProfilePopup","EditAvatarPopup","ImagePopup","Footer","CurrentUserContext","App","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","selectedCard","setSelectedCard","currentUser","setCurrentUser","cards","setCards","getProfile","then","userData","userName","name","userDescription","about","userAvatar","avatar","catch","err","console","log","handleUpdateUser","editProfile","res","closeAllPopups","error","handleUpdateAvatar","editProfileAvatar","getUsersCards","cardList","usersCard","map","card","link","likes","cardId","_id","ownerId","owner","handleCardLike","isLiked","some","user","deleteLike","newCard","state","item","addLike","stateCards","handleDeleteCard","deleteCard","filter","handleEditAvatarClick","handleEditProfileClick","handleAddPlaceClick","handleCardClick"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { api } from \"../utils/Api.js\";\nimport Header from \"./Header\";\nimport Main from \"./Main\";\nimport PopupWithForm from \"./PopupWithForm\";\nimport EditProfilePopup from \"./EditProfilePopup\";\nimport EditAvatarPopup from \"./EditAvatarPopup\";\nimport ImagePopup from \"./ImagePopup\";\nimport Footer from \"./Footer\";\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\nfunction App() {\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n  const [selectedCard, setSelectedCard] = useState(null);\n  const [currentUser, setCurrentUser] = useState({}); // ПР11 создали переменную состояния currentUser\n  const [cards, setCards] = useState([]); // ПР11 перенесла карточки в корневой компонент\n\n  useEffect(() => {\n      api\n        .getProfile()\n        .then((userData) => {\n          //console.log(\"res\", userData)\n          setCurrentUser({...userData,\n            userName: userData.name,\n            userDescription: userData.about,\n            userAvatar: userData.avatar,\n          })\n        })\n        .catch((err) => console.log(`Ошибка...: ${err}`));\n    }, []); // ПР11 создали эффект при монтировании, который будет вызывать api.getUserInfo и обновлять стейт-переменную из полученного значения\n\n    function handleUpdateUser (name, about){\n      api.editProfile(name, about)\n      .then(res => {\n        setCurrentUser(res.name, res);\n        closeAllPopups();\n      }).catch(err => console.error(`Ошибка...: ${err}`));\n    };\n\n    function handleUpdateAvatar (avatar){\n      api.editProfileAvatar(avatar)\n      .then(userData => {\n        setCurrentUser(userData);\n        closeAllPopups();\n      }).catch(err => console.error(`Ошибка...: ${err}`));\n    };\n\n  useEffect(() => {\n    api\n      .getUsersCards()\n      .then((cardList) => {\n        //console.log(\"res\", cardList)\n        const usersCard = cardList.map((card) => {\n          return {\n            name: card.name,\n            link: card.link,\n            likes: card.likes,\n            cardId: card._id,\n            ownerId: card.owner._id,\n          };\n        });\n        //console.log('usersCard', usersCard)\n        setCards(usersCard);\n      })\n      .catch((err) => console.log(`Ошибка...: ${err}`));\n  }, []);\n\n\n  function handleCardLike(card) { // Снова проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some(user => user._id === currentUser._id); // Отправляем запрос в API и получаем обновлённые данные карточки\n    \n  //   // Отправляем запрос в API и получаем обновлённые данные карточки\n  //   api.changeLikeCardStatus(card._id, !isLiked).then((newCard) => {\n  //     setCards((state) => state.map((c) => c._id === card._id ? newCard : c));\n  // });\n    if (isLiked){ //если карточка с лайком ==> удали лайк\n      api.deleteLike(card.cardId)\n      .then(newCard => { \n        setCards((state) => state.map((item) => \n        item.cardId === card.cardId ? newCard : item\n        ));\n      })\n      .catch(err => console.log(`Ошибка...: ${err}`))\n    } else { // если лайка нет ==> поставь лайк\n        api.addLike(card.cardId)\n          .then(newCard => { \n            //console.log(' поставить лайк', newCard)\n            setCards((stateCards) => stateCards.map((item) => \n            item.cardId === card.cardId ? newCard : item\n            ));\n          })\n          .catch(err => console.log(`Ошибка...: ${err}`))\n      } \n  }\n\n  function handleDeleteCard(card) {\n    api.deleteCard(card.cardId)\n      .then((res) => {\n        console.log('удалить карточку', res)\n        setCards((stateCards) => stateCards.filter((item) => \n        item.cardId !== card.cardId))\n      })\n      .catch(err => console.log(`Ошибка...: ${err}`))\n  }\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n\n  function handleCardClick(card) {\n    // console.log(selectedCard)\n    setSelectedCard(card);\n  }\n\n  function closeAllPopups() {\n    setIsEditAvatarPopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setSelectedCard(null);\n  }\n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n    <div className=\"page\">\n      <Header />\n      <Main\n        onEditAvatar={handleEditAvatarClick}\n        onEditProfile={handleEditProfileClick}\n        onAddPlace={handleAddPlaceClick}\n        onCardClick={handleCardClick}\n        onCardLike={handleCardLike}\n        onCardDelete={handleDeleteCard}\n        cards={cards}\n      />\n      <Footer />\n      {/* Модалка редактирования профиля */}\n      <EditProfilePopup\n        isOpen={isEditProfilePopupOpen} \n        onClose={closeAllPopups}\n        onUpdateUser={handleUpdateUser}>\n      </EditProfilePopup>\n\n      {/* Модалка смены аватара */}\n      <EditAvatarPopup\n        isOpen={isEditAvatarPopupOpen}\n        onClose={closeAllPopups}\n        onUpdateAvatar={handleUpdateAvatar}>\n      </EditAvatarPopup>\n      \n      {/* Модалка добавления карточки */}\n      <PopupWithForm\n        name=\"place\"\n        isOpen={isAddPlacePopupOpen}\n        title=\"Новое место\"\n        id=\"form-place\"\n        formName=\"edit-place-form\"\n        buttonText=\"Создать\"\n        onClose={closeAllPopups}>\n            <input\n              type=\"text\"\n              id=\"place-name\"\n              name=\"place-name\"\n              className=\"popup__input popup__input_place-name\"\n              placeholder=\"Название\"\n              minLength=\"2\"\n              maxLength=\"30\"\n              required\n            />\n            <span \n              id=\"error-place-name\" \n              className=\"popup__error\">\n            </span>\n            <input\n              type=\"url\"\n              id=\"place-link\"\n              name=\"place-link\"\n              className=\"popup__input popup__input_place_link\"\n              placeholder=\"Ссылка на картинку\"\n              required\n            />\n            <span \n              id=\"error-place-link\" \n              className=\"popup__error\">\n            </span>\n      </PopupWithForm>\n\n      {/* Модалка удаления карточки */}\n      <PopupWithForm\n        name=\"delete-card\"\n        title=\"Вы уверены?\"\n        id=\"form-delete-card\"\n        formName=\"delete-place-card\"\n        buttonText=\"Да\"\n        onClose={closeAllPopups}\n      />\n\n      {/* Модалка открытия картинки */}\n      <ImagePopup card={selectedCard} onClose={closeAllPopups} />\n    </div>\n    </CurrentUserContext.Provider>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}