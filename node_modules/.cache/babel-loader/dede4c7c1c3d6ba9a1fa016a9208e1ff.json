{"ast":null,"code":"var _jsxFileName = \"/Users/olgasivyuk/dev/mesto-react/src/components/Main.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { api } from \"../utils/Api.js\";\nimport Card from \"./Card.js\";\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Main(_ref) {\n  _s();\n\n  let {\n    onEditAvatar,\n    onEditProfile,\n    onAddPlace,\n    onCardClick\n  } = _ref;\n  // const [userName, setUserName] = useState(\"\");\n  // const [userDescription, setUserDescription] = useState(\"\");\n  // const [userAvatar, setUserAvatar] = useState(\"\");\n  const [cards, setCards] = useState([]); // добавляем переменную стейта с пустым массивом в качестве переменной по умолчанию\n\n  const currentUser = React.useContext(CurrentUserContext); // Подписываемся на контекст CurrentUserContext\n\n  useEffect(() => {\n    api.getUsersCards().then(cardList => {\n      //console.log(\"res\", res)\n      const usersCard = cardList.map(card => {\n        return {\n          name: card.name,\n          link: card.link,\n          likes: card.likes,\n          cardId: card._id\n        };\n      }); //console.log('usersCard', usersCard)\n\n      setCards(usersCard);\n    }).catch(err => console.log(err));\n  }, []);\n\n  function handleCardLike(card) {\n    // Снова проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some(user => user._id === currentUser._userId); // Отправляем запрос в API и получаем обновлённые данные карточки\n\n    api.changeLikeCardStatus(card._id, !isLiked).then(newCard => {\n      setCards(state => state.map(c => c._id === card._id ? newCard : c));\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"content\",\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"profile\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile__avatar-img\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: currentUser.userAvatar,\n          alt: \"\\u0424\\u043E\\u0442\\u043E \\u043F\\u0440\\u043E\\u0444\\u0438\\u043B\\u044F\",\n          className: \"profile__avatar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          title: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u0438\\u0442\\u044C \\u0430\\u0432\\u0430\\u0442\\u0430\\u0440\",\n          className: \"profile__avatar-button\",\n          onClick: onEditAvatar\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile__info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profile__top-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"profile__name\",\n            children: currentUser.userName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            id: \"open_popup\",\n            className: \"profile__add-info\",\n            \"aria-label\": \"\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C \\u043F\\u0440\\u043E\\u0444\\u0438\\u043B\\u044C\",\n            onClick: onEditProfile\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"profile__bio\",\n          children: currentUser.userDescription\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"profile__add-place\",\n        \"aria-label\": \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0444\\u043E\\u0442\\u043E\",\n        onClick: onAddPlace\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"places\",\n      children: cards.map(card => {\n        return /*#__PURE__*/_jsxDEV(Card, {\n          card: card,\n          onCardClick: onCardClick,\n          onCardClick: onCardClick\n        }, card.cardId, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Main, \"i1qbvVxwMo1neJ4vkYBGj+LVrsk=\");\n\n_c = Main;\nexport default Main; // useEffect(() => {\n//   Promise.all([api.getProfile(), api.getUsersCards()])\n//     .then(([userData, cardList]) => {\n//       setUserName(userData.name);\n//       setUserDescription(userData.about);\n//       setUserAvatar(userData.avatar)\n//       const usersCard = cardList.map((card) => {\n//         return {\n//           name: card.name,\n//           link: card.link,\n//           likes: card.likes,\n//           cardId: card._id,\n//         }\n//       })\n//       setCards(usersCard)\n//     })\n//     .catch(err => console.log(err));\n// }, [])\n// useEffect(() => {\n//     api\n//       .getProfile()\n//       .then((res) => {\n//         setUserName(res.name);\n//         setUserDescription(res.about);\n//         setUserAvatar(res.avatar);\n//       })\n//       .catch((err) => console.log(err));\n//   }, []);\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["/Users/olgasivyuk/dev/mesto-react/src/components/Main.js"],"names":["React","useState","useEffect","api","Card","CurrentUserContext","Main","onEditAvatar","onEditProfile","onAddPlace","onCardClick","cards","setCards","currentUser","useContext","getUsersCards","then","cardList","usersCard","map","card","name","link","likes","cardId","_id","catch","err","console","log","handleCardLike","isLiked","some","user","_userId","changeLikeCardStatus","newCard","state","c","userAvatar","userName","userDescription"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { api } from \"../utils/Api.js\";\nimport Card from \"./Card.js\";\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\nfunction Main({ onEditAvatar, onEditProfile, onAddPlace, onCardClick }) {\n  // const [userName, setUserName] = useState(\"\");\n  // const [userDescription, setUserDescription] = useState(\"\");\n  // const [userAvatar, setUserAvatar] = useState(\"\");\n  const [cards, setCards] = useState([]); // добавляем переменную стейта с пустым массивом в качестве переменной по умолчанию\n  const currentUser = React.useContext(CurrentUserContext); // Подписываемся на контекст CurrentUserContext\n  \n\n  useEffect(() => {\n    api\n      .getUsersCards()\n      .then((cardList) => {\n        //console.log(\"res\", res)\n        const usersCard = cardList.map((card) => {\n          return {\n            name: card.name,\n            link: card.link,\n            likes: card.likes,\n            cardId: card._id,\n          };\n        });\n        //console.log('usersCard', usersCard)\n        setCards(usersCard);\n      })\n      .catch((err) => console.log(err));\n  }, []);\n\n  function handleCardLike(card) { // Снова проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some(user => user._id === currentUser._userId);\n    // Отправляем запрос в API и получаем обновлённые данные карточки\n    api\n      .changeLikeCardStatus(card._id, !isLiked)\n      .then((newCard) => {\n      setCards((state) => state.map((c) => \n      c._id === card._id ? newCard : c\n      ));\n    });\n  } \n\n  return (\n    <main className=\"content\">\n      <section className=\"profile\">\n        <div className=\"profile__avatar-img\">\n          <img\n            src={currentUser.userAvatar}\n            alt=\"Фото профиля\"\n            className=\"profile__avatar\"\n          />\n          <button\n            title=\"Загрузить аватар\"\n            className=\"profile__avatar-button\"\n            onClick={onEditAvatar}\n          ></button>\n        </div>\n        <div className=\"profile__info\">\n          <div className=\"profile__top-row\">\n            <h1 className=\"profile__name\">{currentUser.userName}</h1>\n            <button\n              type=\"button\"\n              id=\"open_popup\"\n              className=\"profile__add-info\"\n              aria-label=\"Редактировать профиль\"\n              onClick={onEditProfile}\n            ></button>\n          </div>\n          <p className=\"profile__bio\">{currentUser.userDescription}</p>\n        </div>\n        <button\n          type=\"button\"\n          className=\"profile__add-place\"\n          aria-label=\"Добавить фото\"\n          onClick={onAddPlace}\n        ></button>\n      </section>\n\n      <section className=\"places\">\n        {cards.map((card) => {\n          return (\n            <Card key={card.cardId} card={card} onCardClick={onCardClick} onCardClick={onCardClick} />\n          );\n        })}\n      </section>\n    </main>\n  );\n}\n\nexport default Main;\n\n\n// useEffect(() => {\n//   Promise.all([api.getProfile(), api.getUsersCards()])\n//     .then(([userData, cardList]) => {\n//       setUserName(userData.name);\n//       setUserDescription(userData.about);\n//       setUserAvatar(userData.avatar)\n\n//       const usersCard = cardList.map((card) => {\n//         return {\n//           name: card.name,\n//           link: card.link,\n//           likes: card.likes,\n//           cardId: card._id,\n//         }\n//       })\n//       setCards(usersCard)\n//     })\n//     .catch(err => console.log(err));\n// }, [])\n\n// useEffect(() => {\n//     api\n//       .getProfile()\n//       .then((res) => {\n//         setUserName(res.name);\n//         setUserDescription(res.about);\n//         setUserAvatar(res.avatar);\n//       })\n//       .catch((err) => console.log(err));\n//   }, []);"]},"metadata":{},"sourceType":"module"}