{"ast":null,"code":"var _jsxFileName = \"/Users/olgasivyuk/dev/mesto-react/src/components/EditProfilePopup.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext, useEffect } from \"react\";\nimport PopupWithForm from \"./PopupWithForm\";\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EditProfilePopup(_ref) {\n  _s();\n\n  let {\n    isOpen,\n    onClose,\n    onUpdateUser\n  } = _ref;\n  const currentUser = useContext(CurrentUserContext); // ПР11 Подписываемся на контекст CurrentUserContext\n\n  const [name, setName] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n\n  function handleNameChange(e) {\n    //console.log(e.target.value);\n    setName(e.target.value);\n  }\n\n  function handleDescriptionChange(e) {\n    setDescription(e.target.value);\n  }\n\n  function handleSubmit(e) {\n    // Запрещаем браузеру переходить по адресу формы\n    e.preventDefault();\n    onUpdateUser({\n      // Передаём значения управляемых компонентов во внешний обработчик\n      name,\n      about: description\n    });\n  }\n\n  useEffect(() => {\n    // После загрузки текущего пользователя из API его данные будут использованы в управляемых компонентах.\n    setName(currentUser.name);\n    setDescription(currentUser.about);\n  }, [currentUser, isOpen]);\n  return /*#__PURE__*/_jsxDEV(PopupWithForm, {\n    onSubmit: handleSubmit,\n    name: \"profile\",\n    title: \"\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C \\u043F\\u0440\\u043E\\u0444\\u0438\\u043B\\u044C\",\n    id: \"form-profile\",\n    formName: \"edit-profile-form\",\n    buttonText: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\",\n    isOpen: isOpen,\n    onClose: onClose,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"name\",\n      name: \"name\",\n      className: \"popup__input\",\n      placeholder: \"\\u0418\\u043C\\u044F\",\n      minLength: \"2\",\n      maxLength: \"40\",\n      required: true,\n      defaultValue: name,\n      onChange: handleNameChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      id: \"error-name\",\n      className: \"popup__error\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"bio\",\n      name: \"bio\",\n      className: \"popup__input\",\n      placeholder: \"\\u041E \\u0441\\u0435\\u0431\\u0435\",\n      minLength: \"2\",\n      maxLength: \"200\",\n      required: true,\n      defaultValue: description,\n      onChange: handleDescriptionChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      id: \"error-bio\",\n      className: \"popup__error\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n\n_s(EditProfilePopup, \"WlxPwiqX56tHi/xw5m3aUoyAzNQ=\");\n\n_c = EditProfilePopup;\nexport default EditProfilePopup;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditProfilePopup\");","map":{"version":3,"sources":["/Users/olgasivyuk/dev/mesto-react/src/components/EditProfilePopup.js"],"names":["React","useState","useContext","useEffect","PopupWithForm","CurrentUserContext","EditProfilePopup","isOpen","onClose","onUpdateUser","currentUser","name","setName","description","setDescription","handleNameChange","e","target","value","handleDescriptionChange","handleSubmit","preventDefault","about"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,EAAsCC,SAAtC,QAAuD,OAAvD;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,SAASC,kBAAT,QAAmC,gCAAnC;;;AAEA,SAASC,gBAAT,OAA2D;AAAA;;AAAA,MAAhC;AAACC,IAAAA,MAAD;AAASC,IAAAA,OAAT;AAAkBC,IAAAA;AAAlB,GAAgC;AACzD,QAAMC,WAAW,GAAGR,UAAU,CAACG,kBAAD,CAA9B,CADyD,CACL;;AACpD,QAAM,CAACM,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACY,WAAD,EAAcC,cAAd,IAAgCb,QAAQ,CAAC,EAAD,CAA9C;;AAGA,WAASc,gBAAT,CAA0BC,CAA1B,EAA6B;AAC3B;AACAJ,IAAAA,OAAO,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,CAAP;AACD;;AAED,WAASC,uBAAT,CAAiCH,CAAjC,EAAoC;AAClCF,IAAAA,cAAc,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAAd;AACD;;AAED,WAASE,YAAT,CAAsBJ,CAAtB,EAAyB;AAAC;AACxBA,IAAAA,CAAC,CAACK,cAAF;AACAZ,IAAAA,YAAY,CAAC;AAAE;AACbE,MAAAA,IADW;AAEXW,MAAAA,KAAK,EAAET;AAFI,KAAD,CAAZ;AAKD;;AAEDV,EAAAA,SAAS,CAAC,MAAM;AAAE;AAChBS,IAAAA,OAAO,CAACF,WAAW,CAACC,IAAb,CAAP;AACAG,IAAAA,cAAc,CAACJ,WAAW,CAACY,KAAb,CAAd;AACD,GAHQ,EAGN,CAACZ,WAAD,EAAcH,MAAd,CAHM,CAAT;AAKA,sBACE,QAAC,aAAD;AACI,IAAA,QAAQ,EAAEa,YADd;AAEI,IAAA,IAAI,EAAC,SAFT;AAGI,IAAA,KAAK,EAAC,2HAHV;AAII,IAAA,EAAE,EAAC,cAJP;AAKI,IAAA,QAAQ,EAAC,mBALb;AAMI,IAAA,UAAU,EAAC,wDANf;AAOI,IAAA,MAAM,EAAEb,MAPZ;AAQI,IAAA,OAAO,EAAEC,OARb;AAAA,4BAUQ;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,EAAE,EAAC,MAFL;AAGE,MAAA,IAAI,EAAC,MAHP;AAIE,MAAA,SAAS,EAAC,cAJZ;AAKE,MAAA,WAAW,EAAC,oBALd;AAME,MAAA,SAAS,EAAC,GANZ;AAOE,MAAA,SAAS,EAAC,IAPZ;AAQE,MAAA,QAAQ,MARV;AASE,MAAA,YAAY,EAAEG,IAThB;AAUE,MAAA,QAAQ,EAAEI;AAVZ;AAAA;AAAA;AAAA;AAAA,YAVR,eAsBQ;AACE,MAAA,EAAE,EAAC,YADL;AAEE,MAAA,SAAS,EAAC;AAFZ;AAAA;AAAA;AAAA;AAAA,YAtBR,eA0BQ;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,EAAE,EAAC,KAFL;AAGE,MAAA,IAAI,EAAC,KAHP;AAIE,MAAA,SAAS,EAAC,cAJZ;AAKE,MAAA,WAAW,EAAC,iCALd;AAME,MAAA,SAAS,EAAC,GANZ;AAOE,MAAA,SAAS,EAAC,KAPZ;AAQE,MAAA,QAAQ,MARV;AASE,MAAA,YAAY,EAAEF,WAThB;AAUE,MAAA,QAAQ,EAAEM;AAVZ;AAAA;AAAA;AAAA;AAAA,YA1BR,eAsCQ;AACE,MAAA,EAAE,EAAC,WADL;AAEE,MAAA,SAAS,EAAC;AAFZ;AAAA;AAAA;AAAA;AAAA,YAtCR;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA6CD;;GA1EQb,gB;;KAAAA,gB;AA4ET,eAAeA,gBAAf","sourcesContent":["import React, { useState, useContext, useEffect } from \"react\";\nimport PopupWithForm from \"./PopupWithForm\";\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\nfunction EditProfilePopup ({isOpen, onClose, onUpdateUser}){\n  const currentUser = useContext(CurrentUserContext); // ПР11 Подписываемся на контекст CurrentUserContext\n  const [name, setName] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  \n  \n  function handleNameChange(e) {\n    //console.log(e.target.value);\n    setName(e.target.value);\n  }\n\n  function handleDescriptionChange(e) {\n    setDescription(e.target.value);\n  }\n\n  function handleSubmit(e) {// Запрещаем браузеру переходить по адресу формы\n    e.preventDefault();\n    onUpdateUser({ // Передаём значения управляемых компонентов во внешний обработчик\n      name,\n      about: description,\n    });\n    \n  }\n\n  useEffect(() => { // После загрузки текущего пользователя из API его данные будут использованы в управляемых компонентах.\n    setName(currentUser.name);\n    setDescription(currentUser.about);\n  }, [currentUser, isOpen]);\n\n  return (\n    <PopupWithForm\n        onSubmit={handleSubmit}\n        name=\"profile\"\n        title=\"Редактировать профиль\"\n        id=\"form-profile\"\n        formName=\"edit-profile-form\"\n        buttonText=\"Сохранить\"\n        isOpen={isOpen}\n        onClose={onClose}\n        >\n            <input\n              type=\"text\"\n              id=\"name\"\n              name=\"name\"\n              className=\"popup__input\"\n              placeholder=\"Имя\"\n              minLength=\"2\"\n              maxLength=\"40\"\n              required\n              defaultValue={name}\n              onChange={handleNameChange} \n            />\n            <span \n              id=\"error-name\" \n              className=\"popup__error\">\n            </span>\n            <input\n              type=\"text\"\n              id=\"bio\"\n              name=\"bio\"\n              className=\"popup__input\"\n              placeholder=\"О себе\"\n              minLength=\"2\"\n              maxLength=\"200\"\n              required\n              defaultValue={description}\n              onChange={handleDescriptionChange}\n            />\n            <span \n              id=\"error-bio\" \n              className=\"popup__error\">\n            </span>\n        </PopupWithForm>\n  )\n}\n\nexport default EditProfilePopup;"]},"metadata":{},"sourceType":"module"}