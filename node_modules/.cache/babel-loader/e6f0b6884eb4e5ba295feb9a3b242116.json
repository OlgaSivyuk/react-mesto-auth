{"ast":null,"code":"var _jsxFileName = \"/Users/olgasivyuk/dev/mesto-react/src/components/Main.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { api } from '../utils/Api.js';\nimport Card from './Card.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Main(_ref) {\n  _s();\n\n  let {\n    onEditAvatar,\n    onEditProfile,\n    onAddPlace,\n    onCardClick\n  } = _ref;\n  const [userName, setUserName] = useState('');\n  const [userDescription, setUserDescription] = useState('');\n  const [userAvatar, setUserAvatar] = useState('');\n  const [cards, setCards] = useState([]); // добавляем переменную стейта с пустым массивом в качестве переменной по умолчанию\n\n  useEffect(() => {\n    api.getProfile().then(res => {\n      setUserName(res.name);\n      setUserDescription(res.about);\n      setUserAvatar(res.avatar);\n    }).catch(err => console.log(err));\n  }, []);\n  useEffect(() => {\n    api.getUsersCards().then(cardList => {\n      //console.log(\"res\", res)\n      const usersCard = cardList.map(card => {\n        return {\n          name: card.name,\n          link: card.link,\n          likes: card.likes,\n          cardId: card._id\n        };\n      }); //console.log('usersCard', usersCard)\n\n      setCards(usersCard);\n    }).catch(err => console.log(err));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"content\",\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"profile\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile__avatar-img\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: userAvatar,\n          alt: \"\\u0424\\u043E\\u0442\\u043E \\u043F\\u0440\\u043E\\u0444\\u0438\\u043B\\u044F\",\n          className: \"profile__avatar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          title: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u0438\\u0442\\u044C \\u0430\\u0432\\u0430\\u0442\\u0430\\u0440\",\n          className: \"profile__avatar-button\",\n          onClick: onEditAvatar\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile__info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profile__top-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"profile__name\",\n            children: userName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            id: \"open_popup\",\n            className: \"profile__add-info\",\n            \"aria-label\": \"\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C \\u043F\\u0440\\u043E\\u0444\\u0438\\u043B\\u044C\",\n            onClick: onEditProfile\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"profile__bio\",\n          children: userDescription\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"profile__add-place\",\n        \"aria-label\": \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0444\\u043E\\u0442\\u043E\",\n        onClick: onAddPlace\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"places\",\n      children: cards.map(card => {\n        return /*#__PURE__*/_jsxDEV(Card, {\n          card: card,\n          onCardClick: onCardClick\n        }, card.cardId, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 7\n  }, this);\n}\n\n_s(Main, \"uoyuQZ6o+VlTNZ2EZ19CwS+StNw=\");\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["/Users/olgasivyuk/dev/mesto-react/src/components/Main.js"],"names":["React","useState","useEffect","api","Card","Main","onEditAvatar","onEditProfile","onAddPlace","onCardClick","userName","setUserName","userDescription","setUserDescription","userAvatar","setUserAvatar","cards","setCards","getProfile","then","res","name","about","avatar","catch","err","console","log","getUsersCards","cardList","usersCard","map","card","link","likes","cardId","_id"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport {api} from '../utils/Api.js'\nimport Card from './Card.js'\n\n\nfunction Main({ onEditAvatar, onEditProfile, onAddPlace, onCardClick }) {\n\n    const [userName, setUserName] = useState('');\n    const [userDescription, setUserDescription] = useState('');\n    const [userAvatar, setUserAvatar] = useState('');\n    const [cards, setCards] = useState([]); // добавляем переменную стейта с пустым массивом в качестве переменной по умолчанию\n\n    useEffect(() => {\n      api.getProfile()\n        .then(res => {\n          setUserName(res.name);\n          setUserDescription(res.about);\n          setUserAvatar(res.avatar);\n        })\n        .catch(err => console.log(err));\n    }, []);\n\n    useEffect(() => {\n      api.getUsersCards()\n        .then (cardList => {\n          //console.log(\"res\", res)\n          const usersCard = cardList.map(card => {\n              return {\n              name: card.name, \n              link: card.link,\n              likes: card.likes,\n              cardId: card._id,\n              }\n        })\n           //console.log('usersCard', usersCard)\n           setCards(usersCard)\n        })\n      .catch(err => console.log(err));\n    }, [])\n\n\n    return (\n      <main className=\"content\">\n        <section className=\"profile\">\n          <div className=\"profile__avatar-img\">\n            <img src={userAvatar} alt=\"Фото профиля\" className=\"profile__avatar\"/>\n            <button title=\"Загрузить аватар\" className=\"profile__avatar-button\" onClick={onEditAvatar}></button>\n          </div>\n          <div className=\"profile__info\">\n            <div className=\"profile__top-row\">\n              <h1 className=\"profile__name\">{userName}</h1>\n              <button type=\"button\" id=\"open_popup\" className=\"profile__add-info\" aria-label=\"Редактировать профиль\" onClick={onEditProfile}></button>\n            </div>\n            <p className=\"profile__bio\">{userDescription}</p>\n          </div>\n          <button type=\"button\" className=\"profile__add-place\" aria-label=\"Добавить фото\" onClick={onAddPlace}></button>\n        </section>\n\n        <section className=\"places\">\n          {\n            cards.map(card => {\n              return (\n              <Card key={card.cardId} card={card} onCardClick={onCardClick}/>\n              );\n            })\n          }\n        </section>\n\n      </main>\n    );\n  }\n  \n  export default Main;"]},"metadata":{},"sourceType":"module"}