{"ast":null,"code":"import _slicedToArray from\"/Users/olgasivyuk/dev/mesto-react/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useEffect}from'react';import{api}from'../utils/Api.js';import Card from'./Card.js';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function Main(_ref){var onEditAvatar=_ref.onEditAvatar,onEditProfile=_ref.onEditProfile,onAddPlace=_ref.onAddPlace;var _useState=useState(''),_useState2=_slicedToArray(_useState,2),userName=_useState2[0],setUserName=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),userDescription=_useState4[0],setUserDescription=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),userAvatar=_useState6[0],setUserAvatar=_useState6[1];var _useState7=useState([]),_useState8=_slicedToArray(_useState7,2),cards=_useState8[0],setCards=_useState8[1];// добавляем переменную стейта с пустым массивом в качестве переменной по умолчанию\nuseEffect(function(){api.getProfile().then(function(res){setUserName(res.name);setUserDescription(res.about);setUserAvatar(res.avatar);}).catch(function(err){return console.log(err);});},[]);useEffect(function(){api.getUsersCards().then(function(res){//console.log(\"res\", res)\nvar usersCard=res.map(function(card){return{name:card.name,link:card.link,likes:card.likes,cardId:card._id};});//console.log('usersCard', usersCard)\nsetCards(usersCard);}).catch(function(err){return console.log(err);});},[]);return/*#__PURE__*/_jsxs(\"main\",{className:\"content\",children:[/*#__PURE__*/_jsxs(\"section\",{className:\"profile\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"profile__avatar-img\",children:[/*#__PURE__*/_jsx(\"img\",{src:userAvatar,alt:\"\\u0424\\u043E\\u0442\\u043E \\u043F\\u0440\\u043E\\u0444\\u0438\\u043B\\u044F\",className:\"profile__avatar\"}),/*#__PURE__*/_jsx(\"button\",{title:\"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u0438\\u0442\\u044C \\u0430\\u0432\\u0430\\u0442\\u0430\\u0440\",className:\"profile__avatar-button\",onClick:onEditAvatar})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"profile__info\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"profile__top-row\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"profile__name\",children:userName}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",id:\"open_popup\",className:\"profile__add-info\",\"aria-label\":\"\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C \\u043F\\u0440\\u043E\\u0444\\u0438\\u043B\\u044C\",onClick:onEditProfile})]}),/*#__PURE__*/_jsx(\"p\",{className:\"profile__bio\",children:userDescription})]}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"profile__add-place\",\"aria-label\":\"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0444\\u043E\\u0442\\u043E\",onClick:onAddPlace})]}),/*#__PURE__*/_jsx(\"section\",{className:\"places\",children:cards.map(function(card){return/*#__PURE__*/_jsx(Card,{card:card},card.cardId);})})]});}export default Main;","map":{"version":3,"sources":["/Users/olgasivyuk/dev/mesto-react/src/components/Main.js"],"names":["React","useState","useEffect","api","Card","Main","onEditAvatar","onEditProfile","onAddPlace","userName","setUserName","userDescription","setUserDescription","userAvatar","setUserAvatar","cards","setCards","getProfile","then","res","name","about","avatar","catch","err","console","log","getUsersCards","usersCard","map","card","link","likes","cardId","_id"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport {api} from '../utils/Api.js'\nimport Card from './Card.js'\n\n\nfunction Main({ onEditAvatar, onEditProfile, onAddPlace }) {\n\n    const [userName, setUserName] = useState('');\n    const [userDescription, setUserDescription] = useState('');\n    const [userAvatar, setUserAvatar] = useState('');\n    const [cards, setCards] = useState([]); // добавляем переменную стейта с пустым массивом в качестве переменной по умолчанию\n\n    useEffect(() => {\n      api.getProfile()\n        .then(res => {\n          setUserName(res.name);\n          setUserDescription(res.about);\n          setUserAvatar(res.avatar);\n        })\n        .catch(err => console.log(err));\n    }, []);\n\n    useEffect(() => {\n      api.getUsersCards()\n        .then (res => {\n          //console.log(\"res\", res)\n          const usersCard = res.map(card => ({ \n            name: card.name, \n            link: card.link,\n            likes: card.likes,\n            cardId: card._id,\n      }))\n           //console.log('usersCard', usersCard)\n           setCards(usersCard)\n        })\n      .catch(err => console.log(err));\n    }, [])\n\n\n    return (\n      <main className=\"content\">\n        <section className=\"profile\">\n          <div className=\"profile__avatar-img\">\n            <img src={userAvatar} alt=\"Фото профиля\" className=\"profile__avatar\"/>\n            <button title=\"Загрузить аватар\" className=\"profile__avatar-button\" onClick={onEditAvatar}></button>\n          </div>\n          <div className=\"profile__info\">\n            <div className=\"profile__top-row\">\n              <h1 className=\"profile__name\">{userName}</h1>\n              <button type=\"button\" id=\"open_popup\" className=\"profile__add-info\" aria-label=\"Редактировать профиль\" onClick={onEditProfile}></button>\n            </div>\n            <p className=\"profile__bio\">{userDescription}</p>\n          </div>\n          <button type=\"button\" className=\"profile__add-place\" aria-label=\"Добавить фото\" onClick={onAddPlace}></button>\n        </section>\n        <section className=\"places\">\n          {cards.map(card => (\n            <Card key={card.cardId} card={card}/>\n          ))}\n        </section>\n      </main>\n    );\n  }\n  \n  export default Main;"]},"metadata":{},"sourceType":"module"}