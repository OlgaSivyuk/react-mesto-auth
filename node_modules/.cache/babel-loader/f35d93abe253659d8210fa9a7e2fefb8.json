{"ast":null,"code":"var _jsxFileName = \"/Users/olgasivyuk/dev/react-mesto-auth/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { api } from \"../utils/Api.js\";\nimport { Route, Switch, Redirect, useHistory } from 'react-router-dom';\nimport * as Auth from '../utils/Auth.js';\nimport ProtectedRoute from './ProtectedRoute';\nimport Header from \"./Header\";\nimport Main from \"./Main\";\nimport Login from \"./Login\";\nimport Register from \"./Register\";\nimport InfoToolTip from \"./InfoToolTip\";\nimport EditProfilePopup from \"./EditProfilePopup\";\nimport EditAvatarPopup from \"./EditAvatarPopup\";\nimport AddPlacePopup from \"./AddPlacePopup\";\nimport ImagePopup from \"./ImagePopup\";\nimport DeleteCardConfirmPopup from \"./DeleteCardConfirmPopup\";\nimport Footer from \"./Footer\";\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport successSignImg from '../images/union.svg';\nimport unSuccessSignImg from '../images/union-wrong.svg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n  const [isDeleteCardConfirmPopupOpen, setIsDeleteCardConfirmPopupOpen] = useState(false);\n  const [cards, setCards] = useState([]);\n  const [selectedCard, setSelectedCard] = useState(null);\n  const [currentUser, setCurrentUser] = useState({});\n  const [userData, setUserData] = useState({\n    _id: '',\n    email: ''\n  });\n  const [isInfoToolTipOpen, setIsInfoToolTipOpen] = useState(false);\n  const [isInfoTooltipMessage, setIsInfoTooltipMessage] = useState({\n    image: '',\n    text: ''\n  });\n  const [loggedIn, setLoggedIn] = useState(false);\n  const history = useHistory();\n  useEffect(() => {\n    // попробовать еще раз прописать данные пользователя и карточек в одном useEffect\n    api.getProfile().then(userData => {\n      setCurrentUser({ ...userData,\n        userName: userData.name,\n        userDescription: userData.about,\n        userAvatar: userData.avatar\n      });\n    }).catch(err => console.log(`Ошибка...: ${err}`));\n  }, []);\n\n  function handleUpdateUser(_ref) {\n    let {\n      name,\n      about\n    } = _ref;\n    api.editProfile(name, about).then(userData => {\n      setCurrentUser({ ...userData,\n        userName: userData.name,\n        userDescription: userData.about,\n        userAvatar: userData.avatar\n      });\n      closeAllPopups();\n    }).catch(err => console.error(`Ошибка...: ${err}`));\n  }\n\n  ;\n\n  function handleUpdateAvatar(_ref2) {\n    let {\n      avatar\n    } = _ref2;\n    api.editProfileAvatar(avatar).then(userData => {\n      setCurrentUser({ ...userData,\n        userAvatar: userData.avatar\n      });\n      closeAllPopups();\n    }).catch(err => console.error(`Ошибка...: ${err}`));\n  }\n\n  ;\n  useEffect(() => {\n    api.getUsersCards().then(cardList => {\n      const usersCard = cardList.map(card => {\n        return {\n          name: card.name,\n          link: card.link,\n          likes: card.likes,\n          cardId: card._id,\n          ownerId: card.owner._id\n        };\n      });\n      setCards(usersCard);\n    }).catch(err => console.log(`Ошибка...: ${err}`));\n  }, []);\n\n  function handleAddPlaceSubmit(_ref3) {\n    let {\n      name,\n      link\n    } = _ref3;\n    api.addNewCard(name, link).then(newCard => {\n      setCards([{\n        name: newCard.name,\n        link: newCard.link,\n        likes: newCard.likes,\n        cardId: newCard._id,\n        ownerId: newCard.owner._id\n      }, ...cards]);\n      closeAllPopups();\n    }).catch(err => console.error(`Ошибка...: ${err}`));\n  }\n\n  ;\n\n  function handleCardLike(card) {\n    const isLiked = card.likes.some(user => user._id === currentUser._id);\n\n    if (isLiked) {\n      api.deleteLike(card.cardId).then(newCard => {\n        setCards(state => state.map(item => {\n          if (item.cardId === card.cardId) {\n            return {\n              name: newCard.name,\n              link: newCard.link,\n              likes: newCard.likes,\n              cardId: newCard._id,\n              ownerId: newCard.owner._id\n            };\n          } else return item;\n        }));\n      }).catch(err => console.log(`Ошибка...: ${err}`));\n    } else {\n      api.addLike(card.cardId).then(newCard => {\n        setCards(stateCards => stateCards.map(item => {\n          if (item.cardId === card.cardId) {\n            return {\n              name: newCard.name,\n              link: newCard.link,\n              likes: newCard.likes,\n              cardId: newCard._id,\n              ownerId: newCard.owner._id\n            };\n          } else return item;\n        }));\n      }).catch(err => console.log(`Ошибка...: ${err}`));\n    }\n  }\n\n  ;\n\n  function handleDeleteCard() {\n    api.deleteCard(removeCard.cardId).then(() => {\n      setCards(stateCards => stateCards.filter(item => item.cardId !== removeCard.cardId));\n      closeAllPopups();\n    }).catch(err => console.log(`Ошибка...: ${err}`));\n  }\n\n  ;\n\n  function handleRegister(_ref4) {\n    let {\n      email,\n      password\n    } = _ref4;\n    return Auth.register(email, password).then(res => {\n      if (res.data._id) {\n        setIsInfoToolTipOpen(true);\n        setIsInfoTooltipMessage({\n          image: successSignImg,\n          text: 'Вы успешно зарегистрировались!'\n        });\n        history.push('/signin');\n      } else {\n        setIsInfoToolTipOpen(true);\n        setIsInfoTooltipMessage({\n          image: successSignImg,\n          text: 'Вы успешно зарегистрировались!'\n        });\n      }\n    }).finally(() => setIsInfoToolTipOpen(true));\n  }\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n\n  ;\n\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n\n  ;\n\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n\n  ;\n\n  function handleCardClick(card) {\n    setSelectedCard(card);\n  }\n\n  ;\n\n  function handleTrashbinClick(card) {\n    setIsDeleteCardConfirmPopupOpen(true);\n    setRemoveCard(card);\n  }\n\n  function closeAllPopups() {\n    setIsEditAvatarPopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setSelectedCard(null);\n    setIsDeleteCardConfirmPopupOpen(false);\n    setIsInfoToolTipOpen(false);\n  }\n\n  ;\n  return /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n    value: currentUser,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(ProtectedRoute, {\n          exact: true,\n          path: \"/\",\n          loggedIn: loggedIn,\n          component: Main,\n          onEditAvatar: handleEditAvatarClick,\n          onEditProfile: handleEditProfileClick,\n          onAddPlace: handleAddPlaceClick,\n          onCardClick: handleCardClick,\n          onCardLike: handleCardLike,\n          onCardDelete: handleTrashbinClick,\n          cards: cards\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/signup\",\n          handleRegister: handleRegister,\n          children: /*#__PURE__*/_jsxDEV(Register, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/signin\",\n          children: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          children: loggedIn ? /*#__PURE__*/_jsxDEV(Redirect, {\n            to: \"/\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 25\n          }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n            to: \"/signin\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 47\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n        isOpen: isEditProfilePopupOpen,\n        onClose: closeAllPopups,\n        onUpdateUser: handleUpdateUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EditAvatarPopup, {\n        isOpen: isEditAvatarPopupOpen,\n        onClose: closeAllPopups,\n        onUpdateAvatar: handleUpdateAvatar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AddPlacePopup, {\n        isOpen: isAddPlacePopupOpen,\n        onClose: closeAllPopups,\n        onAddPlace: handleAddPlaceSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DeleteCardConfirmPopup, {\n        isOpen: isDeleteCardConfirmPopupOpen,\n        onClose: closeAllPopups,\n        onConfirmCardDelete: handleDeleteCard\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ImagePopup, {\n        card: selectedCard,\n        onClose: closeAllPopups\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InfoToolTip, {\n        isOpen: isInfoToolTipOpen,\n        onClose: closeAllPopups,\n        image: isInfoTooltipMessage.image,\n        text: isInfoTooltipMessage.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 207,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"3Y8J2rjncbM0erqE25CDhCW/6ww=\", false, function () {\n  return [useHistory];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/olgasivyuk/dev/react-mesto-auth/src/components/App.js"],"names":["useState","useEffect","api","Route","Switch","Redirect","useHistory","Auth","ProtectedRoute","Header","Main","Login","Register","InfoToolTip","EditProfilePopup","EditAvatarPopup","AddPlacePopup","ImagePopup","DeleteCardConfirmPopup","Footer","CurrentUserContext","successSignImg","unSuccessSignImg","App","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isDeleteCardConfirmPopupOpen","setIsDeleteCardConfirmPopupOpen","cards","setCards","selectedCard","setSelectedCard","currentUser","setCurrentUser","userData","setUserData","_id","email","isInfoToolTipOpen","setIsInfoToolTipOpen","isInfoTooltipMessage","setIsInfoTooltipMessage","image","text","loggedIn","setLoggedIn","history","getProfile","then","userName","name","userDescription","about","userAvatar","avatar","catch","err","console","log","handleUpdateUser","editProfile","closeAllPopups","error","handleUpdateAvatar","editProfileAvatar","getUsersCards","cardList","usersCard","map","card","link","likes","cardId","ownerId","owner","handleAddPlaceSubmit","addNewCard","newCard","handleCardLike","isLiked","some","user","deleteLike","state","item","addLike","stateCards","handleDeleteCard","deleteCard","removeCard","filter","handleRegister","password","register","res","data","push","finally","handleEditAvatarClick","handleEditProfileClick","handleAddPlaceClick","handleCardClick","handleTrashbinClick","setRemoveCard"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\nimport { api } from \"../utils/Api.js\";\nimport { Route, Switch, Redirect, useHistory } from 'react-router-dom';\nimport * as Auth from '../utils/Auth.js';\nimport ProtectedRoute from './ProtectedRoute';\nimport Header from \"./Header\";\nimport Main from \"./Main\";\nimport Login from \"./Login\";\nimport Register from \"./Register\";\nimport InfoToolTip from \"./InfoToolTip\"\nimport EditProfilePopup from \"./EditProfilePopup\";\nimport EditAvatarPopup from \"./EditAvatarPopup\";\nimport AddPlacePopup from \"./AddPlacePopup\"\nimport ImagePopup from \"./ImagePopup\";\nimport DeleteCardConfirmPopup from \"./DeleteCardConfirmPopup\";\nimport Footer from \"./Footer\";\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\nimport successSignImg from '../images/union.svg';\nimport unSuccessSignImg from '../images/union-wrong.svg';\n\nfunction App() {\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n  const [isDeleteCardConfirmPopupOpen, setIsDeleteCardConfirmPopupOpen] = useState(false);\n  \n  const [cards, setCards] = useState([]);\n  const [selectedCard, setSelectedCard] = useState(null);\n  const [currentUser, setCurrentUser] = useState({}); \n\n  const [userData, setUserData] = useState({ _id: '', email: '' });\n  const [isInfoToolTipOpen, setIsInfoToolTipOpen] = useState(false);\n  const [isInfoTooltipMessage, setIsInfoTooltipMessage] = useState({ image: '', text: '' });\n  \n  \n  \n\n  const [loggedIn, setLoggedIn] = useState(false);\n\n  const history = useHistory();\n\n  useEffect(() => { // попробовать еще раз прописать данные пользователя и карточек в одном useEffect\n      api.getProfile()\n        .then(userData => {\n          setCurrentUser({...userData,\n            userName: userData.name,\n            userDescription: userData.about,\n            userAvatar: userData.avatar\n          })\n        })\n        .catch((err) => console.log(`Ошибка...: ${err}`));\n    }, []); \n\n    function handleUpdateUser ({name, about}){\n      api.editProfile(name, about)\n      .then(userData => {\n        setCurrentUser({...userData,\n          userName: userData.name,\n          userDescription: userData.about,\n          userAvatar: userData.avatar\n        });\n        closeAllPopups();\n      }).catch(err => console.error(`Ошибка...: ${err}`));\n    };\n\n    function handleUpdateAvatar ({avatar}){\n      api.editProfileAvatar(avatar)\n      .then(userData => {\n        setCurrentUser({...userData,\n          \n          userAvatar: userData.avatar\n        });\n        closeAllPopups();\n      }).catch(err => console.error(`Ошибка...: ${err}`));\n    };\n\n  useEffect(() => {\n    api.getUsersCards()\n      .then((cardList) => {\n        const usersCard = cardList.map((card) => {\n          return {\n            name: card.name,\n            link: card.link,\n            likes: card.likes,\n            cardId: card._id,\n            ownerId: card.owner._id\n          };\n        });\n        setCards(usersCard);\n      })\n      .catch((err) => console.log(`Ошибка...: ${err}`));\n  }, []);\n\n  function handleAddPlaceSubmit({name, link}) {\n    api.addNewCard(name, link)\n    .then (newCard => {\n      setCards([{\n        name: newCard.name,\n        link: newCard.link,\n        likes: newCard.likes,\n        cardId: newCard._id,\n        ownerId: newCard.owner._id\n      }, ...cards]);\n      closeAllPopups();\n    }).catch(err => console.error(`Ошибка...: ${err}`));\n  };\n\n\n  function handleCardLike(card) { \n    const isLiked = card.likes.some(user => user._id === currentUser._id); \n\n    if (isLiked){ \n      api.deleteLike(card.cardId)\n      .then(newCard => { \n        setCards((state) => state.map((item) => {\n          if(item.cardId === card.cardId){\n            return{\n              name: newCard.name,\n              link: newCard.link,\n              likes: newCard.likes,\n              cardId: newCard._id,\n              ownerId: newCard.owner._id\n            }\n          } else return item;\n        }));\n      })\n      .catch(err => console.log(`Ошибка...: ${err}`))\n    } else {\n        api.addLike(card.cardId)\n          .then(newCard => { \n            setCards((stateCards) => stateCards.map((item) => {\n              if(item.cardId === card.cardId){\n                return{\n                  name: newCard.name,\n                  link: newCard.link,\n                  likes: newCard.likes,\n                  cardId: newCard._id,\n                  ownerId: newCard.owner._id\n                }\n              } else return item;\n          }));\n          })\n          .catch(err => console.log(`Ошибка...: ${err}`))\n      } \n   };\n\n  function handleDeleteCard() {\n    api.deleteCard(removeCard.cardId)\n      .then(() => {\n        setCards((stateCards) => stateCards.filter((item) => \n        item.cardId !== removeCard.cardId));\n        closeAllPopups();\n      })\n      .catch(err => console.log(`Ошибка...: ${err}`))\n  };\n\n\n  function handleRegister ({email, password}){\n    return Auth.register(email, password)\n      .then(res => {\n        if(res.data._id){\n          setIsInfoToolTipOpen(true);\n          setIsInfoTooltipMessage({ image: successSignImg, text: 'Вы успешно зарегистрировались!' });\n          history.push('/signin');\n        } else {\n          setIsInfoToolTipOpen(true);\n          setIsInfoTooltipMessage({ image: successSignImg, text: 'Вы успешно зарегистрировались!' });\n        }\n      })\n    .finally(()=>\n      setIsInfoToolTipOpen(true)\n    )\n  }\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  };\n\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  };\n\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  };\n\n  function handleCardClick(card) {\n    setSelectedCard(card);\n  };\n\n  function handleTrashbinClick(card){\n    setIsDeleteCardConfirmPopupOpen(true)\n    setRemoveCard(card)\n  }\n\n  function closeAllPopups() {\n    setIsEditAvatarPopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setSelectedCard(null);\n    setIsDeleteCardConfirmPopupOpen(false);\n    setIsInfoToolTipOpen(false);\n  };\n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <div className=\"page\">\n        <Header />\n\n        <Switch>\n          <ProtectedRoute exact path=\"/\" loggedIn={loggedIn}\n            component={Main}\n            onEditAvatar={handleEditAvatarClick}\n            onEditProfile={handleEditProfileClick}\n            onAddPlace={handleAddPlaceClick}\n            onCardClick={handleCardClick}\n            onCardLike={handleCardLike}\n            onCardDelete={handleTrashbinClick}\n            cards={cards}\n          ></ProtectedRoute>\n          <Route path=\"/signup\" handleRegister={handleRegister}>\n          <Register/>\n          </Route>\n          <Route path=\"/signin\">\n            <Login/>\n          </Route>\n          <Route>\n            {loggedIn ? <Redirect to=\"/\" /> : <Redirect to=\"/signin\" />}\n          </Route>\n        </Switch>\n\n        <Footer />\n\n        {/* Модалка редактирования профиля */}\n        <EditProfilePopup\n          isOpen={isEditProfilePopupOpen}\n          onClose={closeAllPopups}\n          onUpdateUser={handleUpdateUser}>\n        </EditProfilePopup>\n\n        {/* Модалка смены аватара */}\n        <EditAvatarPopup\n          isOpen={isEditAvatarPopupOpen}\n          onClose={closeAllPopups}\n          onUpdateAvatar={handleUpdateAvatar}\n        ></EditAvatarPopup>\n\n        {/* Модалка добавления карточки */}\n        <AddPlacePopup\n          isOpen={isAddPlacePopupOpen}\n          onClose={closeAllPopups}\n          onAddPlace={handleAddPlaceSubmit}\n        ></AddPlacePopup>\n\n        {/* Модалка удаления карточки */}\n        <DeleteCardConfirmPopup\n          isOpen={isDeleteCardConfirmPopupOpen}\n          onClose={closeAllPopups}\n          onConfirmCardDelete={handleDeleteCard}\n        ></DeleteCardConfirmPopup>\n\n        {/* Модалка открытия картинки */}\n        <ImagePopup card={selectedCard} onClose={closeAllPopups} />\n\n        {/* Модалка с ответом о регистрации */}\n        <InfoToolTip \n        isOpen={isInfoToolTipOpen}\n        onClose={closeAllPopups}\n        image={isInfoTooltipMessage.image} \n        text={isInfoTooltipMessage.text}>\n        </InfoToolTip>\n      </div>\n    </CurrentUserContext.Provider>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}