{"ast":null,"code":"var _jsxFileName = \"/Users/olgasivyuk/dev/mesto-react/src/components/Main.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { api } from \"../utils/Api.js\";\nimport Card from \"./Card.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Main(_ref) {\n  _s();\n\n  let {\n    onEditAvatar,\n    onEditProfile,\n    onAddPlace,\n    onCardClick\n  } = _ref;\n  const [userName, setUserName] = useState(\"\");\n  const [userDescription, setUserDescription] = useState(\"\");\n  const [userAvatar, setUserAvatar] = useState(\"\");\n  const [cards, setCards] = useState([]); // добавляем переменную стейта с пустым массивом в качестве переменной по умолчанию\n  // useEffect(() => {\n  //   api\n  //     .getProfile()\n  //     .then((res) => {\n  //       setUserName(res.name);\n  //       setUserDescription(res.about);\n  //       setUserAvatar(res.avatar);\n  //     })\n  //     .catch((err) => console.log(err));\n  // }, []);\n  // useEffect(() => {\n  //   api\n  //     .getUsersCards()\n  //     .then((cardList) => {\n  //       //console.log(\"res\", res)\n  //       const usersCard = cardList.map((card) => {\n  //         return {\n  //           name: card.name,\n  //           link: card.link,\n  //           likes: card.likes,\n  //           cardId: card._id,\n  //         };\n  //       });\n  //       //console.log('usersCard', usersCard)\n  //       setCards(usersCard);\n  //     })\n  //     .catch((err) => console.log(err));\n  // }, []);\n  // если перенести код из прошлой работы\n\n  useEffect(() => {\n    Promise.all([api.getProfile(), api.getUsersCards()]).then(_ref2 => {\n      let [userData, cardList] = _ref2;\n      setUserName(userData.name);\n      setUserDescription(userData.about);\n      setUserAvatar(userData.avatar);\n      const usersCard = cardList.map(card => ({\n        name: card.name,\n        link: card.link,\n        likes: card.likes,\n        cardId: card._id\n      }));\n      setCards(usersCard);\n    }).catch(err => console.log(err));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"content\",\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"profile\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile__avatar-img\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: userAvatar,\n          alt: \"\\u0424\\u043E\\u0442\\u043E \\u043F\\u0440\\u043E\\u0444\\u0438\\u043B\\u044F\",\n          className: \"profile__avatar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          title: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u0438\\u0442\\u044C \\u0430\\u0432\\u0430\\u0442\\u0430\\u0440\",\n          className: \"profile__avatar-button\",\n          onClick: onEditAvatar\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile__info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profile__top-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"profile__name\",\n            children: userName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            id: \"open_popup\",\n            className: \"profile__add-info\",\n            \"aria-label\": \"\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C \\u043F\\u0440\\u043E\\u0444\\u0438\\u043B\\u044C\",\n            onClick: onEditProfile\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"profile__bio\",\n          children: userDescription\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"profile__add-place\",\n        \"aria-label\": \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0444\\u043E\\u0442\\u043E\",\n        onClick: onAddPlace\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"places\",\n      children: cards.map(card => {\n        return /*#__PURE__*/_jsxDEV(Card, {\n          card: card,\n          onCardClick: onCardClick\n        }, card.cardId, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Main, \"yJlQcr1ya6ru9mMcMGaBv7rVdwc=\");\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["/Users/olgasivyuk/dev/mesto-react/src/components/Main.js"],"names":["React","useState","useEffect","api","Card","Main","onEditAvatar","onEditProfile","onAddPlace","onCardClick","userName","setUserName","userDescription","setUserDescription","userAvatar","setUserAvatar","cards","setCards","Promise","all","getProfile","getUsersCards","then","userData","cardList","name","about","avatar","usersCard","map","card","link","likes","cardId","_id","catch","err","console","log"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { api } from \"../utils/Api.js\";\nimport Card from \"./Card.js\";\n\nfunction Main({ onEditAvatar, onEditProfile, onAddPlace, onCardClick }) {\n  const [userName, setUserName] = useState(\"\");\n  const [userDescription, setUserDescription] = useState(\"\");\n  const [userAvatar, setUserAvatar] = useState(\"\");\n  const [cards, setCards] = useState([]); // добавляем переменную стейта с пустым массивом в качестве переменной по умолчанию\n\n  // useEffect(() => {\n  //   api\n  //     .getProfile()\n  //     .then((res) => {\n  //       setUserName(res.name);\n  //       setUserDescription(res.about);\n  //       setUserAvatar(res.avatar);\n  //     })\n  //     .catch((err) => console.log(err));\n  // }, []);\n\n  // useEffect(() => {\n  //   api\n  //     .getUsersCards()\n  //     .then((cardList) => {\n  //       //console.log(\"res\", res)\n  //       const usersCard = cardList.map((card) => {\n  //         return {\n  //           name: card.name,\n  //           link: card.link,\n  //           likes: card.likes,\n  //           cardId: card._id,\n  //         };\n  //       });\n  //       //console.log('usersCard', usersCard)\n  //       setCards(usersCard);\n  //     })\n  //     .catch((err) => console.log(err));\n  // }, []);\n\n  // если перенести код из прошлой работы\nuseEffect(() => {\n  Promise.all([api.getProfile(), api.getUsersCards()])\n    .then(([userData, cardList]) => {\n      setUserName(userData.name);\n      setUserDescription(userData.about);\n      setUserAvatar(userData.avatar)\n\n      const usersCard = cardList.map((card) => ({\n        name: card.name,\n        link: card.link,\n        likes: card.likes,\n        cardId: card._id,\n      }))\n      setCards(usersCard)\n    })\n    .catch(err => console.log(err));\n}, [])\n\n  return (\n    <main className=\"content\">\n      <section className=\"profile\">\n        <div className=\"profile__avatar-img\">\n          <img\n            src={userAvatar}\n            alt=\"Фото профиля\"\n            className=\"profile__avatar\"\n          />\n          <button\n            title=\"Загрузить аватар\"\n            className=\"profile__avatar-button\"\n            onClick={onEditAvatar}\n          ></button>\n        </div>\n        <div className=\"profile__info\">\n          <div className=\"profile__top-row\">\n            <h1 className=\"profile__name\">{userName}</h1>\n            <button\n              type=\"button\"\n              id=\"open_popup\"\n              className=\"profile__add-info\"\n              aria-label=\"Редактировать профиль\"\n              onClick={onEditProfile}\n            ></button>\n          </div>\n          <p className=\"profile__bio\">{userDescription}</p>\n        </div>\n        <button\n          type=\"button\"\n          className=\"profile__add-place\"\n          aria-label=\"Добавить фото\"\n          onClick={onAddPlace}\n        ></button>\n      </section>\n\n      <section className=\"places\">\n        {cards.map((card) => {\n          return (\n            <Card key={card.cardId} card={card} onCardClick={onCardClick} />\n          );\n        })}\n      </section>\n    </main>\n  );\n}\n\nexport default Main;\n\n\n"]},"metadata":{},"sourceType":"module"}